using CoreLibraries.IO;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection;
using VaultLib.Core.DB;
using VaultLib.Core.Hashing;

namespace VaultLib.Core.Chunks
{
    public class BinStringsChunk : ChunkBase
    {
        public List<string> Strings { get; set; }

        public override uint Id => 0x53747245;
        public override uint Size { get; set; }
        public override long Offset { get; set; }

        public override void Read(Vault vault, BinaryReader br)
        {
            while (br.BaseStream.Position < EndOffset)
            {
                string str = NullTerminatedString.Read(br);
                HashManager.AddVLT(str);
            }
        }

        public override void Write(Vault vault, BinaryWriter bw)
        {
            Assembly currentAssembly = Assembly.GetAssembly(typeof(Database));
            AssemblyMetadataAttribute metadataAttribute =
                currentAssembly.GetCustomAttributes<AssemblyMetadataAttribute>().First(m => m.Key == "GitHash");

            Strings.Insert(0, "Generated by VaultBoy by heyitsleo");
            Strings.Insert(1, $"{metadataAttribute.Value} | {DateTime.Now:s}");

            foreach (string s in Strings)
            {
                vault.SaveContext.StringOffsets[s] = bw.BaseStream.Position;
                NullTerminatedString.Write(bw, s);
            }

            bw.AlignWriter(0x10);
        }
    }
}